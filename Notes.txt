Steps 
1. Navigate to a folder in your system
2. Open cmd in that folder
3. Run npx create-react-app hotel_booking
4. Upon successfull completion close the terminal and open the folder in VS Code
5. In the code start modification from App.js file present inside the src folder.
6. Install mui
7. Create 2 folders inside src (components and containers)
8. Create files inside the folder NavBar.js and Home.js

Screen Sizes : 
xs => extra small
sm => small
md => medium
lg => large
xl => extra large
xxl => extra extra large

https://mui.com/material-ui/react-grid/

----------------------------------------
28 June 
1. Call an API
2. Design Hotel Information Page


Dynamic Route for Hotel Details : 
1. Create a dynamic route in app.js with pattern /hotel-details/:slug
2. Use hook useNavigate() to redirect the user to hotel-details screen
3. On hotel details component use useParams hook to get the dynamic slug value

29 June
Google based authentication with Firebase
1. Create a login page with a button "Login With Google" in our project.
2. Register an account on firebase
3. Register a project on firebase
4. Generate a pair of keys/api key/secret key
5. Use firebase library to allow google login
6. Retrieve user information like Name, Email, Profile Picture etc

30 June
1. Move navbar to screens which are visible only after login
2. Username and password based authentication
3. How to protect and redirect from routes
4. Logout

11 Aug
Redux ?

Store : A plain object which cotains all data of an app (THERE CAN ONLY BE 1 STORE IN AN APPLICATION)
Reducer : It is a function which updates the data in store of a prticular module
Action : It is a plain object with 2 key value pairs, which are type and payload


Configuring Redux
1. Install required packages redux react-redux @reduxjs/toolkit
2. Create a store (Centarlized state of the app)
3. Connect store with all components of the app
4. Create reducer for all modules
5. Create actions for all variables in every reducer
6. Update the state data by dispatching actions

21 Aug 

Old State
Action
New State

Home -> Action Dispatch -> Reducer -> State update -> useSelector -> Updated State -> Loop
Test edit from Github UI

23 Aug
Responsiveness

Dashboard for admin : Desktop/Laptop
eCommerce web app : Mobile Devices

Approach for RWD

Mobile first
Desktop first

font-size: 25px;

.card {
    wdith: 15%; // 6.5 cards
}

@media only screen (max-wdith: 576px) {
    // Extra small screen
    font-size: 14px;

    .card {
        width: 50%; // 2 cards
    }
}

@media only screen (max-wdith: 768px) {
    // Extra small screen
    font-size: 14px;

    .card {
        width: 50%; // 2 cards
    }
}

@media only screen (max-wdith: 992px) {
    // Extra small screen
    font-size: 14px;

    .card {
        width: 50%; // 2 cards
    }
}

@media only screen (max-wdith: 1200px) {
    // Extra small screen
    font-size: 14px;

    .card {
        width: 50%; // 2 cards
    }
}

<div class="container-xxl">
    <div class="row"> 12 parts
        <div class="col">
            <div class="row>
            <div class="col"></div>
            <div class="col"></div>
            <div class="col"></div>
            <div class="col"></div>
            </div>
        </div> 
        <div class="col"></div>
        <div class="col"></div>
    </div>
</div>


<div class="container-xxl">
    <div class="row"> 12 parts
        <div class="col-lg-2 col-sm-6"></div> 
        <div class="col-lg-2 col-sm-6"></div>
        <div class="col-lg-2 col-sm-6"></div>
        <div class="col-lg-2 col-sm-6"></div>
        <div class="col-lg-2 col-sm-6"></div>
        <div class="col-lg-2 col-sm-6"></div>
    </div>
</div>

<Grid conatiner>
    <Grid lg={2} sm={6} item></Grid>
    <Grid lg={2} sm={6} item></Grid>
    <Grid lg={2} sm={6} item></Grid>
    <Grid lg={2} sm={6} item></Grid>
    <Grid lg={2} sm={6} item></Grid>
    <Grid lg={2} sm={6} item></Grid>
</Grid>

<Row> 24 parts
    <Col lg={4} sm={12}></Col>
    <Col lg={4} sm={12}></Col>
    <Col lg={4} sm={12}></Col>
    <Col lg={4} sm={12}></Col>
    <Col lg={4} sm={12}></Col>
    <Col lg={4} sm={12}></Col>
</Row>

<Grid container spacing={2}> 12 parts
  <Grid item xs={8}>
    <Item>xs=8</Item>
  </Grid>
  <Grid item xs={4}>
    <Item>xs=4</Item>
  </Grid>
  <Grid item xs={4}>
    <Item>xs=4</Item>
  </Grid>
  <Grid item xs={8}>
    <Item>xs=8</Item>
  </Grid>
</Grid>

24 Aug

Git : Service, used to manage code versioning
GitHub, GitLab, BitBucket, Google, Microsoft DevOps etc

Cloud : Storage, where we store files (Service)
Google Drive, OneDrive, Dropbox, MI Cloud, Apple , JioCloud etc

Pull -> Changes (Edit/Add/Delete -> Add file -> Commit) -> Push